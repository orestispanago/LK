// Exports trace results to .db and flux analysis to .txt
// Export filename: az.db

// Regression parameters
slope_left = 0.024301
slope_right = -0.0236021
intercept_left  = -3.56957
intercept_right = 5.02234


azmin = 135
azmax = 225
azstep = 1

wdir = "C:/Users/orestis/Drafts/Linear/";
expdir = wdir + "raweq/";

tonatiuh.Open( wdir +  "SCO1_CYL_CPC.tnh" );

tonatiuh.SetRaysPerIteration(100);
tonatiuh.SetExportPreviousNextPhotonID( true );
tonatiuh.SetExportPhotonMapType( "SQL_Database" );
tonatiuh.SetExportTypeParameterValue( "ExportDirectory",  expdir );

for( var az = azmin; az <= azmax; az=az+azstep ){
	if( az<=180 ){
		var ypos = slope_left*az + intercept_left;
	}
	else{
		var ypos = slope_right*az + intercept_right;
	}
	ypos = ypos.toString();
	var translation = "0 "+ypos+" 0";
	tonatiuh.SetValue("//SunNode/RootNode/Tracking_unit/", "translation", translation);
	//var fname = Number(ypos).toFixed(2).toString(); // converts abs position to 2 decimal and then to string
	
	tonatiuh.ChangeSunPosition( az, 0 );
	var s = az.toString();
	tonatiuh.SetExportTypeParameterValue( "DBFilename",   s );
	tonatiuh.SetExportAllPhotonMap();
	tonatiuh.Run();
	//Do not remove the following line, must run flux analysis to export surfaceID in .db files!!
	tonatiuh.RunFluxAnalysis("//SunNode/RootNode/Tracking_unit/absorber_cylinder/TShapeKit2", "OUTSIDE", 10000,20,20, expdir,  s,true);
}
